[
  {
    "query": [
      "hey",
      "hello",
      "yo",
      "hi",
      "sup",
      "what's up",
      "hey there",
      "howdy"
    ],
    "response": [
      "Hi there!",
      "Hello! How can I assist you today?",
      "Hey ${username}! What can I do for you?",
      "Howdy ${username}! How can I help?"
    ]
  },
  {
    "query": [
      "how are you",
      "how are you doing",
      "how are you feeling",
      "how's everything",
      "how's it going"
    ],
    "response": [
      "I'm doing great, ready to assist!",
      "All systems are running smoothly!",
      "Everything is good on my end!",
      "I’m here to help, feeling great!"
    ]
  },
  {
    "query": [
      "what's your name",
      "who are you",
      "what should I call you",
      "tell me your name"
    ],
    "response": [
      "I’m Darius, your personal assistant!",
      "You can call me Darius, I’m here to help!",
      "I’m Darius, how can I assist you today?"
    ]
  },
  {
    "query": [
      "what time is it",
      "can you tell me the time",
      "what's the time",
      "tell me the hour"
    ],
    "response": [
      "I’m afraid I can’t check the time for you right now, but you can always check your phone or clock!",
      "I don't have access to the time, but you can easily check it yourself!"
    ]
  },
  {
    "query": [
      "set a timer",
      "set an alarm",
      "remind me",
      "set reminder"
    ],
    "response": [
      "I can’t set timers or reminders right now, but you can use your phone or another device for that!",
      "Sorry, I can’t set timers. You might want to use your phone for that!"
    ]
  },
  {
    "query": [
      "tell me a joke",
      "make me laugh",
      "say something funny"
    ],
    "response": [
      "Why don’t skeletons fight each other? They don’t have the guts!",
      "Why don’t eggs tell each other secrets? Because they might crack up!",
      "What do you call fake spaghetti? An impasta!"
    ]
  },
  {
    "query": [
      "how do I",
      "can you show me how to",
      "teach me how to",
      "show me how to"
    ],
    "response": [
      "I can’t perform complex actions, but I can guide you through simple tasks! Just let me know what you need help with.",
      "I can't demonstrate things, but I can give you easy-to-follow instructions. What do you need help with?"
    ]
  },
  {
    "query": [
      "what is your purpose",
      "what can you do",
      "what are you capable of",
      "what can you help me with"
    ],
    "response": [
      "I can help with simple tasks like setting reminders, telling jokes, and answering basic questions!",
      "I’m here to assist with basic tasks and make your day easier. Let me know what you need!",
      "I can help with basic functions like checking the time, setting reminders, and providing quick responses."
    ]
  },
  {
    "query": [
      "goodbye",
      "bye",
      "see you later",
      "talk to you later"
    ],
    "response": [
      "Goodbye, have a great day!",
      "See you later, take care!",
      "Talk to you soon, stay safe!",
      "Goodbye, I'm always here if you need anything!"
    ]
  },
  {
    "query": [
      "what’s your job",
      "what can you do for me",
      "what’s your function"
    ],
    "response": [
      "I’m here to assist with simple tasks and provide basic information.",
      "I can handle basic queries and help with everyday tasks. What can I do for you?"
    ]
  },
  {
    "query": [
      "tell me a joke",
      "make me laugh",
      "say something funny",
      "joke",
      "can you tell me a joke"
    ],
    "response": [
      "Why don’t skeletons fight each other? They don’t have the guts!",
      "Why don’t eggs tell each other secrets? Because they might crack up!",
      "What do you call fake spaghetti? An impasta!",
      "I would tell you a joke about an elevator, but it’s an uplifting experience!",
      "Why did the scarecrow win an award? Because he was outstanding in his field!",
      "I told my wife she was drawing her eyebrows too high. She looked surprised!",
      "What’s orange and sounds like a parrot? A carrot!",
      "Why don’t some couples go to the gym? Because some relationships don’t work out!",
      "What did one ocean say to the other ocean? Nothing, they just waved!",
      "I’m reading a book on anti-gravity. It’s impossible to put down!",
      "I told my computer I needed a break, and now it’s frozen!",
      "Why did the bicycle fall over? Because it was two-tired!",
      "What do you call cheese that isn’t yours? Nacho cheese!",
      "How does a penguin build its house? Igloos it together!",
      "Why don’t skeletons ever use cell phones? They don’t have the nerve!",
      "What do you call an alligator in a vest? An investigator!",
      "I couldn’t figure out how to put my seatbelt on. Then it clicked!",
      "Why did the tomato turn red? Because it saw the salad dressing!",
      "I’m on a seafood diet. I see food and I eat it!",
      "How do you organize a space party? You planet!",
      "Why don’t oysters share their pearls? Because they’re shellfish!",
      "What’s the best way to watch a fly fishing tournament? Live stream!",
      "I used to play piano by ear, but now I use my hands.",
      "Why do cows have hooves instead of feet? Because they lactose!",
      "What did the grape do when it got stepped on? Nothing but let out a little wine!",
      "What did one wall say to the other wall? I'll meet you at the corner!",
      "What’s a skeleton’s least favorite room in the house? The living room!",
      "I told my wife she was drawing her eyebrows too high. She looked surprised!",
      "Why can’t you hear a pterodactyl go to the bathroom? Because the “P” is silent!",
      "I would tell you a joke about an elevator, but it’s an uplifting experience!",
      "Why don’t some couples go to the gym? Because some relationships don’t work out!",
      "Why did the chicken join a band? Because it had drumsticks!",
      "What do you call a fish wearing a bowtie? Sofishticated!",
      "I used to be a baker, but I couldn't make enough dough.",
      "Why don’t you ever see elephants hiding in trees? Because they’re really good at it!",
      "What’s a skeleton’s least favorite room in the house? The living room!",
      "Why do we never tell secrets on a farm? Because the potatoes have eyes, the corn has ears, and the beans stalk.",
      "What did one hat say to the other hat? Stay here, I’m going on ahead!",
      "I don't trust stairs, they're always up to something.",
      "I used to be a baker, but I couldn't make enough dough.",
      "Why don't some couples go to the gym? Because some relationships don't work out!",
      "What do you call a pile of cats? A meow-tain!",
      "What did one snowman say to the other snowman? Do you smell carrots?",
      "I told my wife she should embrace her mistakes. She gave me a hug!",
      "Why do chicken coops only have two doors? Because if they had four, they’d be chicken sedans!",
      "Why did the golfer bring an extra pair of pants? In case he got a hole in one!",
      "Why did the golfer bring an extra pair of pants? In case he got a hole in one!",
      "I told my wife she was drawing her eyebrows too high. She looked surprised!",
      "Why don’t skeletons ever use cell phones? They don’t have the nerve!",
      "What do you call fake spaghetti? An impasta!",
      "Why did the bicycle fall over? Because it was two-tired!"
    ]
  }
]
